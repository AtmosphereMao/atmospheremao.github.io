{"meta":{"title":"AtmosphereMao Blog","subtitle":"","description":"","author":"Atmospheremao","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2019-12-14T15:54:43.320Z","updated":"2019-12-14T15:54:43.320Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 一名软件技术专业的大学生，爱编程、爱游戏、爱音乐、爱电影。 关于我 年级：大二 专业：软件技术 技术：PHP、Python、Java 热爱：Laravel"}],"posts":[{"title":"Laravel生产环境配置","slug":"Laravel生产环境配置","date":"2020-02-05T05:41:21.786Z","updated":"2020-02-03T17:29:51.268Z","comments":true,"path":"2020/02/05/Laravel生产环境配置/","link":"","permalink":"http://yoursite.com/2020/02/05/Laravel%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","excerpt":"","text":"允许使用的顶级域名视图View设置123@if (app()-&gt;isLocal()) @include(&#39;sudosu::user-selector&#39;)@endif Config设置config/sudosu.php 1234567return [ &#x2F;&#x2F; 允许使用的顶级域名 &#39;allowed_tlds&#39; &#x3D;&gt; [&#39;dev&#39;, &#39;local&#39;, &#39;test&#39;, &#39;app&#39;], &#x2F;&#x2F; 用户模型 &#39;user_model&#39; &#x3D;&gt; App\\Models\\User::class]; .env生产环境中设置 1APP_ENV&#x3D;local 说明现在是本地环境，而不是生产环境。app ()-&gt;isLocal () 判断是本地环境才去注册 SudoSo。日后产品上线了，可以在.env 里改为： 1APP_ENV&#x3D;production 这样 isLocal () 返回 false, 生产环境里就不会引入 SudoSo 了。","categories":[],"tags":[]},{"title":"Homestead搭建与配置","slug":"Homestead搭建与配置","date":"2020-02-05T05:40:50.025Z","updated":"2020-02-03T17:50:12.454Z","comments":true,"path":"2020/02/05/Homestead搭建与配置/","link":"","permalink":"http://yoursite.com/2020/02/05/Homestead%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/","excerpt":"","text":"准备 第一步，安装虚拟机VirtualBox 第二 步，下载vagrant 第三步，安装完毕vagrant之后，运行1vagrant box add laravel&#x2F;homestead 此步的下载会很慢，根据上面提示的地址，用迅雷或其他下载软件下载，保证下载不会被中断，下载完成后，用以下代码完成安装1vagrant box add laravel&#x2F;homestead homestead.box 如使用该方法完成安装，则需要更改版本号（默认导入box版本号为0） 打开C:\\Users\\M.vagrant.d\\boxes，更改box里的版本号为对应的版本。 第四步，把homestead克隆到本地 1git clone https:&#x2F;&#x2F;github.com&#x2F;laravel&#x2F;homestead.git ~&#x2F;Homestead 此时我们举例homestead下载到了~/Homestead文件下面 第五步，创建Homestead.yaml配置文件 12345cd ~&#x2F;Homestead&#x2F;&#x2F; Mac &#x2F; Linux...bash init.sh&#x2F;&#x2F; Windows...init.bat 此时会生成一个Homestead.yaml文件就是配置文件 Homestead.yaml 配置 虚拟机设置 Homestead 支持我们对虚拟机的IP，内存，CPU，虚拟机的默认提供者进行配置。这里我们基本不需要做任何配置，因此可以跳过。 1234ip: &quot;192.168.10.10&quot;memory: 2048cpus: 1provider: virtualbox SSH 秘钥登录配置 authorize 选项是指派登录虚拟机授权连接的公钥文件，此文件填写的是主机上的公钥文件地址，虚拟机初始化时，此文件里的内容会被复制存储到虚拟机的/home/vagrant/.ssh/authorized_keys 文件中，从而实现 SSH免密码登录。在这里我们默认填写即可。 1authorize: ~&#x2F;.ssh&#x2F;id_rsa.pub keys 是数组选项，填写的是本机的 SSH私钥文件地址。虚拟机初始化时，会将此处填写的所有 SSH 私钥文件复制到虚拟机的 /home/vagrant/.ssh/ 文件夹中，从而使虚拟机能共享主机上的 SSH 私钥文件，使虚拟机具备等同于主机的身份认证。此功能为 SSH 授权提供了便利，例如在后面章节中，我们只需要在 GitHub 上配置一个 SSH 公钥，即可实现 GitHub 对虚拟机和主机共同认证。 此处我们将公钥和私钥一起同步到虚拟机中： 123keys: - ~&#x2F;.ssh&#x2F;id_rsa - ~&#x2F;.ssh&#x2F;id_rsa.pub 共享文件夹配置 我们可以通过 folders 来指明本机要映射到 Homestead 虚拟机上的文件夹。 map 对应的是我们本机的文件夹，格式例如：E：/Homestead/Code，以开发者实际项目目录为准。 to 对应的是 Homestead 上的文件夹。 123folders: - map: ~&#x2F;Code to: &#x2F;home&#x2F;vagrant&#x2F;Code 站点配置站点配置允许你在主机里，通过域名来访问虚拟机里的 Laravel 应用。如下面 sites 配置所示，将 homestead.test 映射到一个 Laravel 项目的 public 目录上。这一行配置，会命令 Homestead 为我们新建一个 Nginx 站点，并且把 Web Root 配置到指定目录下。Laravel 应用的 Nginx 站点 Web Root 配置，默认就是在根目录下的 public 目录。 123sites: - map: homestead.test to: &#x2F;home&#x2F;vagrant&#x2F;Code&#x2F;Laravel&#x2F;public 此处的laravle文件并不存在，需要在对应创建 1~&#x2F;Code&#x2F;Laravel&#x2F;public 根据上面站点地址，如需本地测试，则hosts也需要修改C:\\Windows\\System32\\Drivers\\etc\\hosts 1192.168.10.10 homestead.test 数据库配置 我们可以为 Homestead 指定数据库名称，这里使用默认设置即可。 12databases: - homestead 自定义变量 最后，如果你需要自定义一些在虚拟机上可以使用的自定义变量，则可以在 variables 中进行定义。 123variables: - key: APP_ENV value: local 运行 Vagrant完成了 Homestead 的配置，接下来我们要开始启动虚拟机了。 在命令中输入 1vagrant 能看到 Vagrant 为我们提供了一些便利的命令行，下面简单介绍一下 Vagrant 常用的一些命令行的使用： 命令行 说明 vagrant init 初始化 vagrant vagrant up 启动 vagrant vagrant halt 关闭 vagrant vagrant ssh 通过 SSH 登录 vagrant（需要先启动 vagrant） vagrant provision 重新应用更改 vagrant 配置 vagrant destroy 删除 vagrant 让我们开始启动 Homestead： 1&gt; cd ~&#x2F;Homestead &amp;&amp; vagrant up 第一次启动时，Vagrant 会做以下这几件事情： 以导入的 Homestead 虚拟机盒子为模板，新建一台虚拟机； 并按照 Homestead.yaml 里的配置信息，对这台新建的虚拟机进行配置； 配置完成后启动虚拟机。 成功启动后，还是在 ~/Homestead 目录中，通过以下命令来 SSH 登录 Homestead 虚拟机中： 1&gt; vagrant ssh 在虚拟机界面下可以输入退出虚拟机： 1$ exit 最后尝试关闭 Homestead： 1&gt; vagrant halt","categories":[],"tags":[]},{"title":"Hexo 博客创建成功","slug":"myfirstpost","date":"2019-12-12T09:55:09.360Z","updated":"2019-12-14T16:06:05.828Z","comments":true,"path":"2019/12/12/myfirstpost/","link":"","permalink":"http://yoursite.com/2019/12/12/myfirstpost/","excerpt":"","text":"欢迎来到我的Blog，我的blog之后会记录生活乐趣与在编程生涯中遇到的各种问题。 请大家多多指教。","categories":[],"tags":[]}]}